{"version":3,"sources":["assets/img/avatar.png","assets/img/anchor.svg","components/Pirate.js","components/Header.js","components/AddPirateForm.js","components/PirateForm.js","data/sample-pirates-array.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Pirate","_this","this","react_default","a","createElement","className","src","avatar","alt","props","pirate","name","year","weapon","vessel","desc","onClick","removePirate","index","React","Component","Header","logo","title","AddPirateForm","nameRef","createRef","vesselRef","weaponRef","createPirate","event","preventDefault","current","value","addPirate","currentTarget","reset","Fragment","onSubmit","type","placeholder","ref","PirateForm","components_AddPirateForm","pirates","image","App","state","piratesFile","pirateCalls","console","log","Object","toConsumableArray","unshift","setState","splice","randomize","Math","floor","random","length","_this2","components_Header","components_PirateForm","map","components_Pirate","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0a9556d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.954beff2.png\";","module.exports = __webpack_public_path__ + \"static/media/anchor.95048a9f.svg\";","import React from 'react';\nimport '../assets/css/Pirate.css';\nimport avatar from '../assets/img/avatar.png';\n\nclass Pirate extends React.Component {\n  render() {\n    return (\n      <div className=\"pirate\">\n        <ul>\n          <li>\n            <img src={avatar} alt=\"pirate\" />\n            <h3>{this.props.pirate.name}</h3>\n            <p>Died: {this.props.pirate.year}</p>\n            <p>Favorite weapon: {this.props.pirate.weapon}</p>\n            <p>Sailed on: {this.props.pirate.vessel}</p>\n          </li>\n          <li>\n            <p className=\"desc\">{this.props.pirate.desc}</p>\n\n            <button\n              className=\"btn-remove\"\n              onClick={() => this.props.removePirate(this.props.index)}\n            >\n              Remove\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Pirate;\n","import React from 'react';\nimport '../assets/css/Header.css';\nimport logo from '../assets/img/anchor.svg';\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <img src={logo} className=\"logo\" alt=\"logo\" />\n      <h1>{props.title}</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport '../assets/css/AddPirateForm.css';\n\nclass AddPirateForm extends React.Component {\n  nameRef = React.createRef();\n  vesselRef = React.createRef();\n  weaponRef = React.createRef();\n\n  createPirate = event => {\n    event.preventDefault();\n    const pirate = {\n      name: this.nameRef.current.value,\n      vessel: this.vesselRef.current.value,\n      weapon: this.weaponRef.current.value,\n    };\n    this.props.addPirate(pirate);\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <>\n        <h3>Add a Pirate</h3>\n        <form onSubmit={this.createPirate}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Pirate name\"\n            ref={this.nameRef}\n          />\n          <input\n            type=\"text\"\n            name=\"vessel\"\n            placeholder=\"Pirate vessel\"\n            ref={this.vesselRef}\n          />\n          <input\n            type=\"text\"\n            name=\"weapon\"\n            placeholder=\"Pirate weapon\"\n            ref={this.weaponRef}\n          />\n          <button type=\"submit\">Add Pirate</button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AddPirateForm;\n","import React, { Component } from 'react';\nimport AddPirateForm from './AddPirateForm';\n\nclass PirateForm extends Component {\n  render() {\n    return (\n      <div className=\"pirate\">\n        <AddPirateForm addPirate={this.props.addPirate} />\n      </div>\n    );\n  }\n}\n\nexport default PirateForm;\n","// pirate array\nconst pirates = [\n  {\n    name: 'John Rackham',\n    image: 'avatar.png',\n    desc:\n      'Rackham deposed Charles Vane from his position as captain of the sloop Ranger, then cruised the Leeward Islands, Jamaica Channel and Windward Passage. He accepted a pardon in 1719 and moved to New Providence, where he met Anne Bonny. He returned to piracy in 1720 by stealing a British sloop and Anne joined him.',\n    year: 1720,\n    weapon: 'Sword',\n    vessel: 'Bounty',\n  },\n  {\n    name: 'Donald Trump',\n    image: 'avatar.png',\n    desc:\n      \"Trump was born and raised in the New York City borough of Queens and received an economics degree from the Wharton School. He took charge of his family's real estate business in 1971, renamed it The Trump Organization, and expanded it from Queens and Brooklyn into Manhattan. \",\n    year: 1800,\n    weapon: 'Twitter',\n    vessel: 'Trump Airlines',\n  },\n  {\n    name: 'Blackbeard',\n    image: 'avatar.png',\n    desc:\n      \"Edward Teach, better known as Blackbeard, was an English pirate who operated around the West Indies and the eastern coast of Britain's North American colonies. Little is known about his early life, but he may have been a sailor on privateer ships during Queen Anne's War before settling in the Bahamas\",\n    year: 1684,\n    weapon: 'Sword',\n    vessel: 'Revenge',\n  },\n  {\n    name: 'Jean Lafitte',\n    image: 'avatar.png',\n    desc:\n      'A rich Barbadian land owner, turned pirate solely in search of adventure. Bonnet captained a 10-gun sloop, named the Revenge, raiding ships off the Virginia coast in 1717. He was caught and hanged in 1718',\n    year: 1718,\n    weapon: 'Sword',\n    vessel: 'Stealth',\n  },\n];\n\nexport default pirates;\n","import React from 'react';\nimport Pirate from './components/Pirate';\nimport Header from './components/Header';\nimport PirateForm from './components/PirateForm';\n\nimport piratesFile from './data/sample-pirates-array';\n\nclass App extends React.Component {\n  state = {\n    pirates: piratesFile,\n  };\n\n  pirateCalls = [\n    'Aaarg, belay that!',\n    'Avast me hearties!',\n    'Shiver me timbers!',\n  ];\n\n  addPirate = pirate => {\n    console.log(pirate);\n    //take a copy of the current state and put it into pirates var\n    const pirates = [...this.state.pirates];\n    console.log(pirates);\n    pirates.unshift(pirate);\n    console.log(pirates);\n    //set state pirates with var pirates\n    this.setState({ pirates: pirates });\n  };\n\n  removePirate = index => {\n    console.log(index);\n    const pirates = [...this.state.pirates];\n    pirates.splice(index, 1);\n    console.log(pirates);\n    this.setState({ pirates: pirates });\n  };\n\n  randomize = () =>\n    this.pirateCalls[Math.floor(Math.random() * this.pirateCalls.length)];\n\n  render() {\n    return (\n      <>\n        <Header title={this.randomize()} />\n        <PirateForm addPirate={this.addPirate} />\n        {this.state.pirates.map((pirate, index) => (\n          <Pirate\n            key={index}\n            index={index}\n            pirate={pirate}\n            removePirate={this.removePirate}\n          />\n        ))}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}